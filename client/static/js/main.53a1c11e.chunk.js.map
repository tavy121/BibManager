{"version":3,"sources":["components/BibItem.js","components/Bibs.js","components/About.js","components/BibDetails.js","components/AddBib.js","components/EditBib.js","components/Main.js","components/Navbar.js","App.js","serviceWorker.js","index.js"],"names":["BibItem","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","item","react_default","a","createElement","className","Link","to","concat","_id","book","Component","Bibs","bibs","getBibs","_this2","axios","get","then","response","setState","data","catch","err","console","log","bibsItems","map","bib","i","components_BibItem","key","About","BibDetails","details","getBib","bibId","match","params","id","bibliography","_this3","delete","history","push","title","city","onClick","onDelete","bind","AddBib","newBib","request","method","url","e","refs","value","addBib","preventDefault","onSubmit","type","ref","htmlFor","EditBib","handleInputChange","assertThisInitialized","getBibDetails","editBib","target","name","defineProperty","onChange","Main","Switch","Route","exact","path","component","Navbar","href","data-activates","App","components_Navbar","components_Main","Boolean","window","location","hostname","ReactDOM","render","BrowserRouter","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"mRAqBeA,cAhBX,SAAAA,EAAYC,GAAM,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACdE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KACDQ,MAAO,CACRC,KAAMT,EAAMS,MAHFR,wEAQd,OACIS,EAAAC,EAAAC,cAAA,MAAIC,UAAU,mBACdH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMC,GAAE,SAAAC,OAAWZ,KAAKI,MAAMC,KAAKQ,MAAQb,KAAKI,MAAMC,KAAKS,cAXjDC,aCwCPC,cAvCX,SAAAA,IAAa,IAAAnB,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAgB,IACTnB,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAkB,GAAAb,KAAAH,QACKI,MAAQ,CACTa,KAAM,IAHDpB,oFAQTG,KAAKkB,4CAGA,IAAAC,EAAAnB,KACLoB,IAAMC,IAAI,8BACTC,KAAK,SAAAC,GACFJ,EAAKK,SAAS,CAACP,KAAMM,EAASE,MAAO,gBAIxCC,MAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,sCAI1B,IAAMG,EAAY9B,KAAKI,MAAMa,KAAKc,IAAI,SAACC,EAAKC,GACxC,OACI3B,EAAAC,EAAAC,cAAC0B,EAAD,CAASC,IAAMH,EAAInB,IAAMR,KAAO2B,MAGxC,OACI1B,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,kBACAF,EAAAC,EAAAC,cAAA,MAAIC,UAAU,cACTqB,WAhCFf,aCKJqB,EAPD,kBACZ9B,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,qBCoDW6B,cAlDX,SAAAA,EAAYzC,GAAM,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAqC,IACdxC,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAuC,GAAAlC,KAAAH,KAAMJ,KACDQ,MAAO,CACRkC,QAAQ,IAHEzC,oFAQdG,KAAKuC,0CAGD,IAAApB,EAAAnB,KACAwC,EAAQxC,KAAKJ,MAAM6C,MAAMC,OAAOC,GACpCvB,IAAMC,IAAN,8BAAAT,OAAwC4B,IACvClB,KAAK,SAAAC,GACFJ,EAAKK,SAAS,CAACc,QAASf,EAASE,KAAKmB,cAAe,WACjDhB,QAAQC,IAAIV,EAAKf,WAGxBsB,MAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,wCAGpB,IAAAkB,EAAA7C,KACFwC,EAAQxC,KAAKI,MAAMkC,QAAQzB,IAC/BO,IAAM0B,OAAN,8BAAAlC,OAA2C4B,IAC1ClB,KAAK,SAAAC,GACFsB,EAAKjD,MAAMmD,QAAQC,KAAK,OAE3BtB,MAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,sCAI1B,OACIrB,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMD,UAAU,WAAWE,GAAG,KAA9B,QACAL,EAAAC,EAAAC,cAAA,UAAKR,KAAKI,MAAMkC,QAAQxB,MACxBR,EAAAC,EAAAC,cAAA,MAAIC,UAAU,cACVH,EAAAC,EAAAC,cAAA,MAAIC,UAAY,mBAAhB,UAA0CT,KAAKI,MAAMkC,QAAQW,OAC7D3C,EAAAC,EAAAC,cAAA,MAAIC,UAAY,mBAAhB,SAAyCT,KAAKI,MAAMkC,QAAQY,OAGhE5C,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMD,UAAU,MAAME,GAAE,cAAAC,OAAgBZ,KAAKI,MAAMkC,QAAQzB,MAA3D,QAEAP,EAAAC,EAAAC,cAAA,UAAQ2C,QAASnD,KAAKoD,SAASC,KAAKrD,MAAOS,UAAU,iBAArD,kBA7CSM,aCiDVuC,iLAhDJC,GAAO,IAAA1D,EAAAG,KACVoB,IAAMoC,QAAQ,CACVC,OAAQ,OACRC,IAAK,6BACLjC,KAAM8B,IAETjC,KAAK,SAAAC,GACF1B,EAAKD,MAAMmD,QAAQC,KAAK,OAE3BtB,MAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,sCAGrBgC,GACL,IAAMJ,EAAS,CACXzC,KAAMd,KAAK4D,KAAK9C,KAAK+C,MACrBZ,MAAOjD,KAAK4D,KAAKX,MAAMY,MACvBX,KAAMlD,KAAK4D,KAAKV,KAAKW,OAEzB7D,KAAK8D,OAAOP,GACZI,EAAEI,kDAIF,OACIzD,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMD,UAAU,WAAWE,GAAG,KAA9B,QACDL,EAAAC,EAAAC,cAAA,qBACAF,EAAAC,EAAAC,cAAA,QAAMwD,SAAUhE,KAAKgE,SAASX,KAAKrD,OAC9BM,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAA,SAAOyD,KAAK,OAAOnD,KAAK,OAAOoD,IAAI,SACnC5D,EAAAC,EAAAC,cAAA,SAAO2D,QAAQ,QAAf,SAEJ7D,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAA,SAAOyD,KAAK,OAAOhB,MAAM,QAAQiB,IAAI,UACrC5D,EAAAC,EAAAC,cAAA,SAAO2D,QAAQ,SAAf,UAEJ7D,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAA,SAAOyD,KAAK,OAAOf,KAAK,OAAOgB,IAAI,SACnC5D,EAAAC,EAAAC,cAAA,SAAO2D,QAAQ,QAAf,SAEJ7D,EAAAC,EAAAC,cAAA,SAAOyD,KAAK,SAASJ,MAAM,OAAOpD,UAAU,iBA1C3CM,6BCgGNqD,cA/FX,SAAAA,EAAYxE,GAAM,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAoE,IACdvE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAsE,GAAAjE,KAAAH,KAAMJ,KACDQ,MAAQ,CACTuC,GAAG,GACH7B,KAAK,GACLmC,MAAM,GACNC,KAAK,IAETrD,EAAKwE,kBAAoBxE,EAAKwE,kBAAkBhB,KAAvBvD,OAAAwE,EAAA,EAAAxE,QAAAwE,EAAA,EAAAxE,CAAAD,KARXA,oFAYdG,KAAKuE,wDAIM,IAAApD,EAAAnB,KACPwC,EAAQxC,KAAKJ,MAAM6C,MAAMC,OAAOC,GACpCvB,IAAMC,IAAN,8BAAAT,OAAwC4B,IACvClB,KAAK,SAAAC,GACFJ,EAAKK,SAAS,CACXmB,GAAIpB,EAASE,KAAKmB,aAAa/B,IAC/BC,KAAMS,EAASE,KAAKmB,aAAa9B,KACjCmC,MAAO1B,EAASE,KAAKmB,aAAaK,MAClCC,KAAM3B,EAASE,KAAKmB,aAAaM,MACjC,WACCtB,QAAQC,IAAIV,EAAKf,WAGxBsB,MAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,qCAGtB4B,GAAO,IAAAV,EAAA7C,KACXoB,IAAMoC,QAAQ,CACVC,OAAQ,QACRC,IAAG,8BAAA9C,OAAgCZ,KAAKI,MAAMuC,IAC9ClB,KAAM8B,IAETjC,KAAK,SAAAC,GACFsB,EAAKjD,MAAMmD,QAAQC,KAAK,OAE3BtB,MAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,sCAGrBgC,GACL,IAAMJ,EAAS,CACXzC,KAAMd,KAAK4D,KAAK9C,KAAK+C,MACrBZ,MAAOjD,KAAK4D,KAAKX,MAAMY,MACvBX,KAAMlD,KAAK4D,KAAKV,KAAKW,OAEzB7D,KAAKwE,QAAQjB,GACbI,EAAEI,2DAEYJ,GACd,IAAMc,EAASd,EAAEc,OACXZ,EAAQY,EAAOZ,MACfa,EAAOD,EAAOC,KAEpB1E,KAAKwB,SAAL1B,OAAA6E,EAAA,EAAA7E,CAAA,GACK4E,EAAOb,qCAKZ,OACIvD,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMD,UAAU,WAAWE,GAAG,KAA9B,QACDL,EAAAC,EAAAC,cAAA,sBACAF,EAAAC,EAAAC,cAAA,QAAMwD,SAAUhE,KAAKgE,SAASX,KAAKrD,OAC9BM,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAA,SAAOyD,KAAK,OAAOS,KAAK,OAAOR,IAAI,OAAOL,MAAO7D,KAAKI,MAAMU,KAC5D8D,SAAU5E,KAAKqE,oBAEf/D,EAAAC,EAAAC,cAAA,SAAO2D,QAAQ,QAAf,SAEJ7D,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAA,SAAOyD,KAAK,OAAOS,KAAK,QAAQR,IAAI,QAAQL,MAAO7D,KAAKI,MAAM6C,MAC9D2B,SAAU5E,KAAKqE,oBAEf/D,EAAAC,EAAAC,cAAA,SAAO2D,QAAQ,SAAf,UAEJ7D,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAA,SAAOyD,KAAK,OAAOS,KAAK,OAAOR,IAAI,OAAOL,MAAO7D,KAAKI,MAAM8C,KAC5D0B,SAAU5E,KAAKqE,oBAEf/D,EAAAC,EAAAC,cAAA,SAAO2D,QAAQ,QAAf,SAEJ7D,EAAAC,EAAAC,cAAA,SAAOyD,KAAK,SAASJ,MAAM,OAAOpD,UAAU,iBAzF1CM,aCgBP8D,EAZF,kBACTvE,EAAAC,EAAAC,cAAA,YACIF,EAAAC,EAAAC,cAACsE,EAAA,EAAD,KACIxE,EAAAC,EAAAC,cAACuE,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWlE,IACjCV,EAAAC,EAAAC,cAACuE,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,SAASC,UAAW9C,IACtC9B,EAAAC,EAAAC,cAACuE,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,YAAYC,UAAa5B,IAC3ChD,EAAAC,EAAAC,cAACuE,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,iBAAiBC,UAAad,IAChD9D,EAAAC,EAAAC,cAACuE,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,YAAYC,UAAa7C,OCaxC8C,mLAxBP,OACI7E,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAA,KAAG4E,KAAK,IAAI3E,UAAU,qBAAtB,QACAH,EAAAC,EAAAC,cAAA,KAAG6E,iBAAe,YAAY5E,UAAU,iCACxCH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,gBAEbH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,4BACdH,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMC,GAAG,KAAIL,EAAAC,EAAAC,cAAA,KAAGC,UAAU,gBAA1B,UAEJH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,WAAWkC,GAAG,aACxBrC,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMC,GAAG,KAAIL,EAAAC,EAAAC,cAAA,KAAGC,UAAU,gBAA1B,kBACJH,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMC,GAAG,aAAYL,EAAAC,EAAAC,cAAA,KAAGC,UAAU,eAAlC,aACJH,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMC,GAAG,UAASL,EAAAC,EAAAC,cAAA,KAAGC,UAAU,0BAA/B,sBAhBXM,aCkBNuE,EAhBH,kBACVhF,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAC+E,EAAD,MACAjF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACfH,EAAAC,EAAAC,cAACgF,EAAD,OAEAlF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACbH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMC,GAAG,YAAYF,UAAU,8BAC7BH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,2BCDDgF,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASnD,MACvB,2DCZNoD,IAASC,OACTxF,EAAAC,EAAAC,cAACuF,EAAA,EAAD,KACAzF,EAAAC,EAAAC,cAACwF,EAAD,OAEEC,SAASC,eAAe,SDuHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAM/E,KAAK,SAAAgF,GACjCA,EAAaC","file":"static/js/main.53a1c11e.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport {Link} from 'react-router-dom';\n\n\nclass BibItem extends Component{\n    constructor(props){\n        super(props);\n        this.state ={\n            item: props.item\n        }\n    }\n\n    render(){\n        return(\n            <li className=\"collection-item\">\n            <Link to={`/bibs/${this.state.item._id}`}>{this.state.item.book}</Link>\n            </li>\n        )\n    }\n}\n\nexport default BibItem","import React, { Component } from 'react';\nimport axios from 'axios';\nimport BibItem from './BibItem';\n\nclass Bibs extends Component{\n    constructor(){\n        super();\n        this.state = {\n            bibs: []\n        }\n    }\n\n    componentWillMount(){\n        this.getBibs();\n    }\n\n    getBibs(){\n        axios.get('http://localhost:3000/bibs')\n        .then(response =>{\n            this.setState({bibs: response.data}, () =>{\n                //console.log(this.state);\n            });\n        })\n        .catch(err => console.log(err));\n    }\n\n    render(){\n        const bibsItems = this.state.bibs.map((bib, i) =>{\n            return (\n                <BibItem key={ bib._id } item={ bib }/>\n            )\n        })\n        return(\n            <div>\n                <h1>Bibs</h1>\n                <ul className=\"collection\">\n                    {bibsItems}\n                </ul>\n            </div>\n        )\n    }\n\n};\n\nexport default Bibs;","import React from 'react';\n\nconst About = () =>(\n  <div>\n    <h1>About</h1>\n  </div>\n)\n\n\nexport default About;","import React, {Component} from 'react';\nimport axios from 'axios';\nimport {Link} from 'react-router-dom';\n\n\nclass BibDetails extends Component{\n    constructor(props){\n        super(props);\n        this.state ={\n            details:''\n        }\n    }\n\n    componentWillMount(){\n        this.getBib();\n    }\n\n    getBib(){\n        let bibId = this.props.match.params.id;\n        axios.get(`http://localhost:3000/bibs/${bibId}`)\n        .then(response =>{\n            this.setState({details: response.data.bibliography}, () =>{\n                console.log(this.state);\n            });\n        })\n        .catch(err => console.log(err));\n    }\n\n    onDelete(){\n        let bibId = this.state.details._id;\n        axios.delete(`http://localhost:3000/bibs/${bibId}`)\n        .then(response =>{\n            this.props.history.push('/');\n        })\n        .catch(err => console.log(err));\n    }\n\n    render(){\n        return(\n            <div>\n                <br />\n                <Link className=\"btn grey\" to=\"/\">Back</Link>\n                <h1>{this.state.details.book}</h1>\n                <ul className=\"collection\">\n                    <li className = \"collection-item\">Title: {this.state.details.title}</li>\n                    <li className = \"collection-item\">City: {this.state.details.city}</li>\n                </ul>\n\n                <Link className=\"btn\" to={`/bibs/edit/${this.state.details._id}`}>Edit</Link>\n\n                <button onClick={this.onDelete.bind(this)} className=\"btn red right\">Delete</button>\n            </div>\n        )\n    }\n}\n\nexport default BibDetails","import React, {Component} from 'react';\nimport axios from 'axios';\nimport {Link} from 'react-router-dom';\n\n\nclass AddBib extends Component{\n    addBib(newBib){\n        axios.request({\n            method: 'post',\n            url: 'http://localhost:3000/bibs',\n            data: newBib\n        })\n        .then(response =>{\n            this.props.history.push('/');\n        })\n        .catch(err => console.log(err));\n    }\n\n    onSubmit(e){\n        const newBib = {\n            book: this.refs.book.value,\n            title: this.refs.title.value,\n            city: this.refs.city.value\n        }\n        this.addBib(newBib);\n        e.preventDefault();\n    }\n\n    render(){\n        return(\n            <div>\n                <br />\n                <Link className=\"btn grey\" to=\"/\">Back</Link>\n               <h1>Add bib</h1>\n               <form onSubmit={this.onSubmit.bind(this)}>\n                    <div className=\"input-field\">\n                        <input type=\"text\" book=\"book\" ref=\"book\" />\n                        <label htmlFor=\"book\">Book</label>\n                    </div>\n                    <div className=\"input-field\">\n                        <input type=\"text\" title=\"title\" ref=\"title\" />\n                        <label htmlFor=\"title\">Title</label>\n                    </div>\n                    <div className=\"input-field\">\n                        <input type=\"text\" city=\"city\" ref=\"city\" />\n                        <label htmlFor=\"city\">City</label>\n                    </div>\n                    <input type=\"submit\" value=\"Save\" className=\"btn\" />\n               </form>\n            </div>\n        )\n    }\n}\n\nexport default AddBib;","import React, {Component} from 'react';\nimport axios from 'axios';\nimport {Link} from 'react-router-dom';\n\n\nclass EditBib extends Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            id:'',\n            book:'',\n            title:'',\n            city:''\n        }\n        this.handleInputChange = this.handleInputChange.bind(this);\n    }\n\n    componentWillMount(){\n        this.getBibDetails();\n    }\n\n    \n    getBibDetails(){\n        let bibId = this.props.match.params.id;\n        axios.get(`http://localhost:3000/bibs/${bibId}`)\n        .then(response =>{\n            this.setState({\n               id: response.data.bibliography._id,\n               book: response.data.bibliography.book,\n               title: response.data.bibliography.title,\n               city: response.data.bibliography.city\n            }, ()=>{\n                console.log(this.state);\n           });\n        })\n        .catch(err => console.log(err));\n    }\n\n    editBib(newBib){\n        axios.request({\n            method: 'patch',\n            url: `http://localhost:3000/bibs/${this.state.id}`,\n            data: newBib\n        })\n        .then(response =>{\n            this.props.history.push('/');\n        })\n        .catch(err => console.log(err));\n    }\n    \n    onSubmit(e){\n        const newBib = {\n            book: this.refs.book.value,\n            title: this.refs.title.value,\n            city: this.refs.city.value\n        }\n        this.editBib(newBib);\n        e.preventDefault();\n    }\n    handleInputChange(e){\n        const target = e.target;\n        const value = target.value;\n        const name = target.name;\n\n        this.setState({\n            [name]: value\n        });\n    }\n    \n    render(){\n        return(\n            <div>\n                <br />\n                <Link className=\"btn grey\" to=\"/\">Back</Link>\n               <h1>Edit bib</h1>\n               <form onSubmit={this.onSubmit.bind(this)}>\n                    <div className=\"input-field\">\n                        <input type=\"text\" name=\"book\" ref=\"book\" value={this.state.book} \n                        onChange={this.handleInputChange}\n                        />\n                        <label htmlFor=\"book\">Book</label>\n                    </div>\n                    <div className=\"input-field\">\n                        <input type=\"text\" name=\"title\" ref=\"title\" value={this.state.title} \n                        onChange={this.handleInputChange}\n                        />\n                        <label htmlFor=\"title\">Title</label>\n                    </div>\n                    <div className=\"input-field\">\n                        <input type=\"text\" name=\"city\" ref=\"city\" value={this.state.city}\n                        onChange={this.handleInputChange}\n                        />\n                        <label htmlFor=\"city\">City</label>\n                    </div>\n                    <input type=\"submit\" value=\"Save\" className=\"btn\" />\n               </form>\n            </div>\n        )\n    }\n}\n\nexport default EditBib;","import React from 'react';\nimport { Switch, Route} from 'react-router-dom';\n\nimport Bibs from './Bibs';\nimport About from './About'\nimport BibDetails from './BibDetails';\nimport AddBib from './AddBib';\nimport EditBib from './EditBib';\n\nconst Main = () =>(\n    <main>\n        <Switch>\n            <Route exact path='/' component={Bibs} />\n            <Route exact path='/about' component={About} />\n            <Route exact path='/bibs/add' component = {AddBib} />\n            <Route exact path='/bibs/edit/:id' component = {EditBib} />\n            <Route exact path='/bibs/:id' component = {BibDetails} />\n        </Switch>\n    </main>\n);\n\nexport default Main;","import React, {Component} from 'react';\nimport {Link} from 'react-router-dom';\n\nclass Navbar extends Component{\n    render(){\n        return(\n            <div>\n                <nav className=\"blue darken-3\">\n                    <div className=\"nav-wrapper\">\n                        <a href=\"/\" className=\"brand-logo center\">Bibs</a>\n                        <a data-activates=\"main-menu\" className=\"button-collapse show-on-large\">\n                        <i className=\"fa fa-bars\"></i>\n                        </a>\n                        <ul className=\"right hide-on-small-only\">\n                        <li><Link to=\"/\"><i className=\"fa fa-users\"></i>Bibs</Link></li>         \n                        </ul>\n                        <ul className=\"side-nav\" id=\"main-menu\">\n                            <li><Link to=\"/\"><i className=\"fa fa-users\"></i> Bibliography</Link></li>  \n                            <li><Link to=\"/bibs/add\"><i className=\"fa fa-plus\"></i> Add bib</Link></li>  \n                            <li><Link to=\"/about\"><i className=\"fa fa-question-circle\"></i> About</Link></li> \n                        </ul>\n                    </div>\n                </nav>\n            </div>\n        );\n    }\n\n};\n\nexport default Navbar;","import React from 'react';\nimport './App.css';\nimport Main from './components/Main';\nimport Navbar from './components/Navbar';\nimport {Link} from 'react-router-dom';\nconst App = () =>(\n  <div>\n    <Navbar />\n    <div className=\"container\">\n    <Main />\n    </div>\n    <div className=\"fixed-action-btn\">\n      <Link to=\"/bibs/add\" className=\"btn-floating btn-large red\" >\n        <i className=\"fa fa-plus\"></i>\n      </Link>\n\n    </div>\n  </div>\n)\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport {BrowserRouter} from 'react-router-dom';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n<BrowserRouter>\n<App />\n</BrowserRouter>\n, document.getElementById('root'));\nserviceWorker.unregister();\n"],"sourceRoot":""}